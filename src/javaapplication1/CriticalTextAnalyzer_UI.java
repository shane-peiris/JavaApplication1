/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;

/**
 *
 * @author Shane
 */
public class CriticalTextAnalyzer_UI extends javax.swing.JFrame {

    /**
     * Creates new form CriticalTextAnalyzer
     * 
     */
    
    //Variable to hold the total count of words
    int tot_words=0;
    //Variable to hold the entire file content
    String content="";
    
    //Variable to hold the one line data
    String line="";
    
    //Variable to hold a static file path
    String file_path_static="";
    
 
        
    //CriticalTextAnalyzer Constructor
    public CriticalTextAnalyzer_UI() {
        initComponents();
//        file_path_static="";     
//        read_file(file_path_static);
//        txt_content.setText(content);
//        txt_no_of_words.setText(String.valueOf(tot_words));
//        tot_words=0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        Btn_Select_File = new javax.swing.JButton();
        lbl_Selected_File_Path = new javax.swing.JTextField();
        Btn_read = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_content = new javax.swing.JTextArea();
        txt_no_of_words = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Critical Text Analyzer");

        Btn_Select_File.setText("Select File");
        Btn_Select_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_Select_FileActionPerformed(evt);
            }
        });

        lbl_Selected_File_Path.setText("Select File");

        Btn_read.setText("Read Content");
        Btn_read.setDoubleBuffered(true);
        Btn_read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_readActionPerformed(evt);
            }
        });

        txt_content.setColumns(20);
        txt_content.setRows(5);
        jScrollPane1.setViewportView(txt_content);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_Selected_File_Path, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Btn_Select_File)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_no_of_words, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(Btn_read)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Selected_File_Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Select_File))
                .addGap(49, 49, 49)
                .addComponent(Btn_read)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_no_of_words, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_Select_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_Select_FileActionPerformed
        // TODO add your handling code here:
        
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.FILES_ONLY);
        j.showSaveDialog(this);
        File selectedPfile = j.getSelectedFile();
        lbl_Selected_File_Path.setText(selectedPfile.getAbsolutePath());
    }//GEN-LAST:event_Btn_Select_FileActionPerformed

    private void Btn_readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_readActionPerformed
        // TODO add your handling code here:
        
        read_file(lbl_Selected_File_Path.getText());
        txt_content.setText(content);
        txt_no_of_words.setText(String.valueOf(tot_words));
        tot_words=0;
    }//GEN-LAST:event_Btn_readActionPerformed

    public int getNumTokens()
    {
       String[] words=line.split("\\s+");
       int no_of_words = words.length;
       
       for(int i=0;i<no_of_words;i++)
       {
           
       }
        
        return 0;
    }
    
    
    public void count_words(String line)
    {
        String[] words=line.split("\\s+");
        int no_of_words = words.length;
        tot_words = tot_words + no_of_words;        
    }
    
    
    public void read_file(String path)
    {       
        String filePath=path;
        try{

        FileReader fileToRead = new FileReader(filePath);

        //Instantiate the BufferedReader Class to read the file
        BufferedReader bufferReader = new BufferedReader(fileToRead);

        
        
        
        // Read file line by line and print on the console
        while ((line = bufferReader.readLine()) != null)   {
                content = content + line + "\n";
                //Calls the method to count the words in the current line
                count_words(line);
        }
        
        
        //Close the buffer reader
        bufferReader.close();
        }catch(Exception e){
                System.out.println("Error while reading file line by line:" 
                + e.getMessage());                      
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriticalTextAnalyzer_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriticalTextAnalyzer_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriticalTextAnalyzer_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriticalTextAnalyzer_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CriticalTextAnalyzer_UI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Select_File;
    private javax.swing.JButton Btn_read;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lbl_Selected_File_Path;
    private javax.swing.JTextArea txt_content;
    private javax.swing.JTextField txt_no_of_words;
    // End of variables declaration//GEN-END:variables
}
